two = 0.75, three = 0.75,
adult = 0.8)
# Change fecundity for only adults
fecund <- 10
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[, 1] <- turtle_int_pop
turtle_int_pop <- c(16, # 16 newborns
0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
ann_surv <- data.frame(new = 0.5, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
fecund <- 4
# Adults and subadults can reproduce
## Adults
adult_fert <- ann_surv$adult * fecund
## Subadults
three_fert <- ann_surv$three * fecund
turtle_trans_mat <- matrix(0, 5, 5)
# Newborn survival
turtle_trans_mat[2, 1] <- ann_surv$new
# One-year old survival
turtle_trans_mat[3, 2] <- ann_surv$one
# Two-year old survival
turtle_trans_mat[4, 3] <- ann_surv$two
# Three-year old survival
turtle_trans_mat[5, 4] <- ann_surv$three
# Adult survival
turtle_trans_mat[5, 5] <- ann_surv$adult
# Three-year old fertility
turtle_trans_mat[1, 4] <- three_fert
# Adult fertility
turtle_trans_mat[1, 5] <- adult_fert
colnames(turtle_trans_mat) <- c("Newborn", "1-Year", "2-Year", "3-Year", "Adult")
rownames(turtle_trans_mat) <- c("Newborn", "1-Year", "2-Year", "3-Year", "Adult")
turtle_trans_mat
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# for loop method
prop_age_orig <- matrix(0, 5, 31)
for (i in 1:31) {
prop_age_orig[, i] <- turtle_pops[, i]/total_annual_N[i]
}
# proportions
prop_age_orig <- proportions(turtle_pops, 2)
# Graphs through time
time <- 1:31
## Total N
plot(time, total_annual_N, ylab = "Total Population", xlab = "Time (years)")
## Lambda
time <- 1:30
plot(time, lambda, ylab = "Lambda", xlab = "Time (years)")
## Proportions
time <- 1:31
plot(time, prop_age_orig[1,], col = "blue", ylim = c(0,1), ylab = "Proportion of Age Groups", xlab = "Time (years)")
lines(time, prop_age_orig[2,], col = "red")
lines(time, prop_age_orig[3,], col = "green")
lines(time, prop_age_orig[4,], col = "orange")
lines(time, prop_age_orig[5,], col = "pink")
legend(24, 1, legend = c("Newborn", "1-Year", "2-Year", "3-Year", "Adult"), col = c("blue",
"red", "green", "orange", "pink"), title = "Ages", cex = 0.75)
final_lambda_orig <- lambda[30]
stable_age_dist_orig <- prop_age_orig[,31]
# Change starting pop
turtle_int_pop <- c(5, 5, 5, 5, 5)
# Matrix multiplication with transition matrix
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Lambda
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Proportions
prop_age <- proportions(turtle_pops, 2)
# Final lambda and props
final_lambda_2 <- lambda[30]
stable_age_dist_2 <- prop_age[,31]
# Compare
final_lambda_orig
final_lambda_2
## The same
stable_age_dist_orig
stable_age_dist_2
## The same
# Initial pop
turtle_int_pop <- c(16, # 16 newborns
0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
turtle_trans_mat[2, 1] <- ann_surv$new
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Lambda
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
final_lambda_3 <- lambda[30]
# Change
final_lambda_orig
final_lambda_3
## It changes to a decreasing population (< 1)
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.95)
turtle_trans_mat[5, 5] <- ann_surv$adult
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Proportions
prop_age <- proportions(turtle_pops, 2)
# Final lambda and props
final_lambda_4 <- lambda[30]
stable_age_dist_4 <- prop_age[,31]
final_lambda_4
stable_age_dist_4
## Total N
plot(time, total_annual_N, ylab = "Total Population", xlab = "Time (years)")
final_lambda_4
stable_age_dist_4[5]
# Percent change equation: ((final value - initial value) / initial value) * 100
((0.95 - 0.8)/0.8) * 100 # The percent increase of the survival rate
# Change adult survival
as <- 0.916
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = as)
turtle_trans_mat[5, 5] <- ann_surv$adult
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_5 <- lambda[30]
final_lambda_5
((as - 0.8)/ 0.8 * 100) # The percent increase of the survival rate
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
# Change fecundity for only adults
fecund <- 10
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[, 1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_6 <- lambda[30]
final_lambda_3
final_lambda_6
## Went to positive growth
((final_lambda_6 - final_lambda_3) / final_lambda_3 * 100) # The percent increase of the survival rate
# Initial pop
turtle_int_pop <- c(0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
# Survival and Fecundity
ann_surv <- data.frame(one = 0.75,
two = 0.75,
three = 0.75,
adult = 0.8)
fecund <- 4
# Transition Matrix
turtle_trans_mat_pre <- matrix(0, 4, 4)
turtle_trans_mat_pre[2, 1] <- ann_surv$one
turtle_trans_mat_pre[3, 2] <- ann_surv$two
turtle_trans_mat_pre[4, 3] <- ann_surv$three
turtle_trans_mat_pre[4, 4] <- ann_surv$adult
turtle_trans_mat_pre[1, 3] <- ann_surv$three * fecund
turtle_trans_mat_pre[1, 4] <- ann_surv$adult * fecund
colnames(turtle_trans_mat_pre) <- c("1-Year", "2-Year", "3-Year", "Adult")
rownames(turtle_trans_mat_pre) <- c("1-Year", "2-Year", "3-Year", "Adult")
turtle_trans_mat_pre
# Simulate population
turtle_pops <- matrix(0, 4, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat_pre %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_7 <- lambda[30]
final_lambda_orig
final_lambda_7
# The lambda for the pre-breeding model is a lot higher than the lambda for the post-breeding model.
# Change post-breeding transition matrix
ann_surv <- data.frame(new = 0.5, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
turtle_trans_mat[2, 1] <- ann_surv$new
# Calculate eigenvalue
eigen(turtle_trans_mat)$values[1]
eigen(turtle_trans_mat_pre)$values[1]
## They are the same as the lambda
# Find/compare pre-breeding eigenvector
pre_turtle_proportions <- proportions(turtle_pops, 2)
pre_stable_age <- eigen(turtle_trans_mat_pre)$vectors[,1]/sum(eigen(turtle_trans_mat_pre)$vectors[,1])
pre_stable_age #The pre-breeding model eigenvector
prop_age_orig[, 31]
turtle_trans_mat
turtle_int_pop <- c(16, # 16 newborns
0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
ann_surv <- data.frame(new = 0.5, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
fecund <- 4
# Adults and subadults can reproduce
## Adults
adult_fert <- ann_surv$adult * fecund
## Subadults
three_fert <- ann_surv$three * fecund
turtle_trans_mat <- matrix(0, 5, 5)
# Newborn survival
turtle_trans_mat[2, 1] <- ann_surv$new
# One-year old survival
turtle_trans_mat[3, 2] <- ann_surv$one
# Two-year old survival
turtle_trans_mat[4, 3] <- ann_surv$two
# Three-year old survival
turtle_trans_mat[5, 4] <- ann_surv$three
# Adult survival
turtle_trans_mat[5, 5] <- ann_surv$adult
# Three-year old fertility
turtle_trans_mat[1, 4] <- three_fert
# Adult fertility
turtle_trans_mat[1, 5] <- adult_fert
colnames(turtle_trans_mat) <- c("Newborn", "1-Year", "2-Year", "3-Year", "Adult")
rownames(turtle_trans_mat) <- c("Newborn", "1-Year", "2-Year", "3-Year", "Adult")
turtle_trans_mat
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# for loop method
prop_age_orig <- matrix(0, 5, 31)
for (i in 1:31) {
prop_age_orig[, i] <- turtle_pops[, i]/total_annual_N[i]
}
# proportions
prop_age_orig <- proportions(turtle_pops, 2)
# Graphs through time
time <- 1:31
## Total N
plot(time, total_annual_N, ylab = "Total Population", xlab = "Time (years)")
## Lambda
time <- 1:30
plot(time, lambda, ylab = "Lambda", xlab = "Time (years)")
## Proportions
time <- 1:31
plot(time, prop_age_orig[1,], col = "blue", ylim = c(0,1), ylab = "Proportion of Age Groups", xlab = "Time (years)")
lines(time, prop_age_orig[2,], col = "red")
lines(time, prop_age_orig[3,], col = "green")
lines(time, prop_age_orig[4,], col = "orange")
lines(time, prop_age_orig[5,], col = "pink")
legend(24, 1, legend = c("Newborn", "1-Year", "2-Year", "3-Year", "Adult"), col = c("blue",
"red", "green", "orange", "pink"), title = "Ages", cex = 0.75)
final_lambda_orig <- lambda[30]
stable_age_dist_orig <- prop_age_orig[,31]
# Change starting pop
turtle_int_pop <- c(5, 5, 5, 5, 5)
# Matrix multiplication with transition matrix
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Lambda
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Proportions
prop_age <- proportions(turtle_pops, 2)
# Final lambda and props
final_lambda_2 <- lambda[30]
stable_age_dist_2 <- prop_age[,31]
# Compare
final_lambda_orig
final_lambda_2
## The same
stable_age_dist_orig
stable_age_dist_2
## The same
# Initial pop
turtle_int_pop <- c(16, # 16 newborns
0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
turtle_trans_mat[2, 1] <- ann_surv$new
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Lambda
total_annual_N <- colSums(turtle_pops)
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
final_lambda_3 <- lambda[30]
# Change
final_lambda_orig
final_lambda_3
## It changes to a decreasing population (< 1)
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.95)
turtle_trans_mat[5, 5] <- ann_surv$adult
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Proportions
prop_age <- proportions(turtle_pops, 2)
# Final lambda and props
final_lambda_4 <- lambda[30]
stable_age_dist_4 <- prop_age[,31]
final_lambda_4
stable_age_dist_4
## Total N
plot(time, total_annual_N, ylab = "Total Population", xlab = "Time (years)")
final_lambda_4
stable_age_dist_4[5]
# Percent change equation: ((final value - initial value) / initial value) * 100
((0.95 - 0.8)/0.8) * 100 # The percent increase of the survival rate
# Change adult survival
as <- 0.916
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = as)
turtle_trans_mat[5, 5] <- ann_surv$adult
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_5 <- lambda[30]
final_lambda_5
((as - 0.8)/ 0.8 * 100) # The percent increase of the survival rate
# Change transition matrix
ann_surv <- data.frame(new = 0.5 * 0.10, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
# Change fecundity for only adults
fecund <- 10
turtle_trans_mat[5, 5] <- ann_surv$adult
turtle_trans_mat[1, 5] <- ann_surv$adult * fecund
# Simulate population
turtle_pops <- matrix(0, 5, 31)
turtle_pops[, 1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_6 <- lambda[30]
final_lambda_3
final_lambda_6
## Went to positive growth
((final_lambda_6 - final_lambda_3) / final_lambda_3 * 100) # The percent increase of the survival rate
# Initial pop
turtle_int_pop <- c(0, # no 1-year olds
0, # no 2-year olds
0, # no 3-year olds
4) # 4 adults
# Survival and Fecundity
ann_surv <- data.frame(one = 0.75,
two = 0.75,
three = 0.75,
adult = 0.8)
fecund <- 4
# Transition Matrix
turtle_trans_mat_pre <- matrix(0, 4, 4)
turtle_trans_mat_pre[2, 1] <- ann_surv$one
turtle_trans_mat_pre[3, 2] <- ann_surv$two
turtle_trans_mat_pre[4, 3] <- ann_surv$three
turtle_trans_mat_pre[4, 4] <- ann_surv$adult
turtle_trans_mat_pre[1, 3] <- ann_surv$three * fecund
turtle_trans_mat_pre[1, 4] <- ann_surv$adult * fecund
colnames(turtle_trans_mat_pre) <- c("1-Year", "2-Year", "3-Year", "Adult")
rownames(turtle_trans_mat_pre) <- c("1-Year", "2-Year", "3-Year", "Adult")
turtle_trans_mat_pre
# Simulate population
turtle_pops <- matrix(0, 4, 31)
turtle_pops[,1] <- turtle_int_pop
for (i in 1:30) {
turtle_pops[ , i + 1] <- turtle_trans_mat_pre %*% turtle_pops[ , i]
}
# Total pop per year
total_annual_N <- colSums(turtle_pops)
# Lambda
N_t <- total_annual_N[1:30]
N_t1 <- total_annual_N[2:31]
lambda <- N_t1/N_t
# Final lambda and props
final_lambda_7 <- lambda[30]
final_lambda_orig
final_lambda_7
# The lambda for the pre-breeding model is a lot higher than the lambda for the post-breeding model.
# Change post-breeding transition matrix
ann_surv <- data.frame(new = 0.5, one = 0.75,
two = 0.75, three = 0.75,
adult = 0.8)
turtle_trans_mat[2, 1] <- ann_surv$new
# Calculate eigenvalue
eigen(turtle_trans_mat)$values[1]
eigen(turtle_trans_mat_pre)$values[1]
## They are the same as the lambda
# Find/compare pre-breeding eigenvector
pre_turtle_proportions <- proportions(turtle_pops, 2)
pre_stable_age <- eigen(turtle_trans_mat_pre)$vectors[,1]/sum(eigen(turtle_trans_mat_pre)$vectors[,1])
pre_stable_age #The pre-breeding model eigenvector
prop_age_orig[, 31]
