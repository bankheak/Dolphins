layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)}
# Create an unweighted network
system.time({
registerDoParallel(n.cores)
dolp_ig <- list()
for (l in seq_along(list_years)) {
dolp_ig[[l]] <- graph.edgelist(el[[l]][,1:2])
# Add the edge weights to this network
E(dolp_ig[[l]])$weight <- as.numeric(el[[l]][,3])
# Create undirected network
dolp_ig[[l]] <- as.undirected(dolp_ig[[l]])
}
### End parallel processing
stopImplicitCluster()
})
# Newman's Q modularity
newman <- lapply(dolp_ig, function (df) {cluster_leading_eigen(df, steps = -1, weights = E(df)$weight,
start = NULL, options = arpack_defaults, callback = NULL,
extra = NULL, env = parent.frame())})
# Set the node names based on row names
for (i in seq_along(nxn)) {
row_names <- rownames(nxn[[i]])
V(dolp_ig[[i]])$name <- row_names
## Parse out what HI behavior they engage in
BG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
}
# Set the node names based on row names
for (i in seq_along(nxn)) {
row_names <- rownames(nxn[[i]])
V(dolp_ig[[i]])$name <- row_names
## Parse out what HI behavior they engage in
BG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman$membership))
for (i in 1:max(newman$membership)){
V(dolp_ig[[year]])$color[which(newman$membership==i)] <- col[i]
}
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)}
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = ifelse(V(dolp_ig[[i]])$name %in% BG, "red", ifelse(V(dolp_ig[[i]])$name %in% SD, "yellow", ifelse(V(dolp_ig[[i]])$name %in% FG, "blue", "black"))),
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)}
# Shortest path lengths (geodesics) and diameter
# all binary shortest path lengths between nodes
dist <- lapply(ig, function(df) {distances(df)})
dist
# Shortest path lengths (geodesics) and diameter
# # mean shortest path
dist <- lapply(ig, function(df) {mean_distance(df)})
dist
# Binary shortest path lengths
short_path <- lapply(ig, function(df) {distance_table(df, directed=FALSE)})
short_path
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
seq_along(dolp_ig)
# Set the node names based on row names
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)}
View(HI_data)
View(HI_data)
# Set the node names based on row names
BG <- SD <- FG <- NULL
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[i]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[i]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[i]] <- "blue"
}
# Set the node names based on row names
BG <- SD <- FG <- list()
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[i] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[i]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[i]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[i]] <- "blue"
}
# Set the node names based on row names
BG <- SD <- FG <- list()
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[i]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[i]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[i]] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set the node names based on row names
BG <- SD <- FG <- list()
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[[i]]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[[i]]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[[i]]] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set the node names based on row names
BG <- SD <- FG <- vector("list", length = length(dolp_ig))
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Initialize label_color attribute for each node
V(dolp_ig[[i]])$label_color <- "black"
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[[i]]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[[i]]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[[i]]] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=2,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI, V(dolp_ig[[i]])$name, NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=0.5,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set the node names based on row names
BG <- SD <- FG <- vector("list", length = length(dolp_ig))
for (i in seq_along(dolp_ig)) {
# Set the node names
V(dolp_ig[[i]])$name <- rownames(nxn[[i]])
## Parse out what HI behavior they engage in
BG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "BG" & HI_data[[i]]$Freq > 0])
SD[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "SD" & HI_data[[i]]$Freq > 0])
FG[[i]] <- as.vector(HI_data[[i]]$Code[HI_data[[i]]$DiffHI == "FG" & HI_data[[i]]$Freq > 0])
## Initialize label_color attribute for each node
V(dolp_ig[[i]])$label_color <- "black"
## Make a different text color for each category
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% BG[[i]]] <- "red"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% SD[[i]]] <- "yellow"
V(dolp_ig[[i]])$label_color[V(dolp_ig[[i]])$name %in% FG[[i]]] <- "blue"
}
# Generate a vector of colors based on the number of unique memberships
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$color <- NA
col <- rainbow(max(newman[[i]]$membership))
for (j in 1:max(newman[[i]]$membership)){
V(dolp_ig[[i]])$color[which(newman[[i]]$membership==j)] <- col[j]
}
}
# Make sure the HI dolphins stand out
for (i in seq_along(dolp_ig)) {
V(dolp_ig[[i]])$size <- ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], 10, 5)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], as.character(V(dolp_ig[[i]])$name), NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=0.5,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
# Set up the plotting area with 1 row and 2 columns for side-by-side plots
par(mfrow=c(1, 2))
# Main labels for the plots
main_labels <- c("1993-2004 Network", "2005-2014 Network")  # Replace with appropriate main labels
# Plot the graph with individual IDs as labels
for (i in seq_along(dolp_ig)) {
plot(dolp_ig[[i]],
layout = layout_with_fr(dolp_ig[[i]]),
# link weight, rescaled for better visualization
edge.width= E(dolp_ig[[i]])$weight*4,
# node size as degree (rescaled)
vertex.size= V(dolp_ig[[i]])$size,
vertex.frame.color= NA, #"black",
vertex.label.family = "Helvetica",
vertex.label=ifelse(V(dolp_ig[[i]])$name %in% row_names_HI[[i]], as.character(V(dolp_ig[[i]])$name), NA),
vertex.label.color = V(dolp_ig[[i]])$label_color,
vertex.label.cex=0.8,
vertex.label.dist=0.5,
# edge.curved=0,
vertex.frame.width=0.01)
# Add the main label above the plot
title(main = main_labels[i], line = -1)
}
