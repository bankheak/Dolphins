# Filter data for Degree and unique IDs
data_d <- result_df[, c("ID", "Period", "Degree", "HI")]
unique_data_d <- data_d[!duplicated(data_d[, c('ID', 'Period')]), ]
D_data <- data.frame(ID = c(ID_1, ID_2),
Period = c(rep(Period[1], length(ID_1)),
rep(Period[2], length(ID_2))),
HI = unique_data_d$HI)
D_data$Value <- c(unique_data_d$Degree[unique_data_d$Period == 0],
unique_data_d$Degree[unique_data_d$Period == 1])
# plotting the heatmap
data_list <- list(B_data, S_data, D_data)
metric_title <- c("Betweeness", "Strength", "Degree")
heatmap <- list()
for (i in seq_along(data_list)) {
data <- data_list[[i]]
for (j in unique(data$HI)) {
data <- data[data$HI == j, ]
heatmap[[j]] <- ggplot(data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
library(ggplot2) # Visualization
for (i in seq_along(data_list)) {
data <- data_list[[i]]
for (j in unique(data$HI)) {
data <- data[data$HI == j, ]
heatmap[[j]] <- ggplot(data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
heatmap[[1]]
heatmap[[2]]
View(B_data)
View(B_data)
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in unique(metric_data$HI)) {
subset_data <- metric_data[metric_data$HI == j, ]
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
heatmap_list <- list()
# plotting the heatmap
data_list <- list(B_data, S_data, D_data)
metric_title <- c("Betweeness", "Strength", "Degree")
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in unique(metric_data$HI)) {
subset_data <- metric_data[metric_data$HI == j, ]
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
heatmap[[1]]
heatmap[[2]]
heatmap[[3]]
i=1
j=1
metric_data <- data_list[[i]]
subset_data <- metric_data[metric_data$HI == j, ]
subset_data
unique(metric_data$HI)
j=unique(metric_data$HI)[1]
j
subset_data <- metric_data[metric_data$HI == j, ]
subset_data
heatmap_list <- list()
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
View(heatmap_list)
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in unique(metric_data$HI)) {
subset_data <- metric_data[metric_data$HI == j, ]
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
heatmap_list[[1]]
metric_data$ID[metric_data$Period == 0]
i=1
metric_data <- data_list[[i]]
metric_data$ID[metric_data$Period == 0]
metric_data
metric_data$ID[metric_data$Period == "Pre-HAB"]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB"], ]
matched_ids
matched_ids <- metric_data[metric_data$Period == "Pre-HAB", ]
matched_ids
j=unique(metric_data$HI)[1]
j
subset_data <- merge(matched_ids, metric_data[metric_data$HI == j, ], all = T)
subset_data
subset_data <- metric_data[metric_data$HI == j, ]
subset_data
metric_data$ID[metric_data$Period == "Pre-HAB"] %in% subset_data$ID[subset_data$Period == "Post-HAB"]
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in% subset_data$ID[subset_data$Period == "Post-HAB"]
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in% subset_data$ID[subset_data$Period == "Post-HAB"]
metric_data
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in% metric_data$ID[metric_data$Period == "Post-HAB" & metric_data$HI == "BG"]
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"]
metric_data$ID[metric_data$Period == "Post-HAB" & metric_data$HI == "BG"] %in% metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"]
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"]
metric_data$ID[metric_data$Period == "Post-HAB" & metric_data$HI == "BG"]
metric_data$HI == "BG"
metric_data$ID[metric_data$Period == "Post-HAB" & metric_data$HI == "BG"]
metric_data$Period == "Post-HAB"
metric_data
metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in% metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == "BG"]
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- mertric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == "BG"], ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == "BG"], ]
matched_ids
metric_data[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF", ]
metric_data[metric_data$Period == "Post_HAB" & metric_data$HI == "BG", ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == "BG"], ]
matched_ids
HI_data
matched_ids
matched_ids <- matched_ids[metric_data$HI == "NF", ]
matched_ids
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == "BG"], ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
matched_ids
HI_data
subset_data <- rbind(HI_data, matched_ids)
subset_data
# plotting the heatmap
data_list <- list(B_data, S_data, D_data)
metric_title <- c("Betweeness", "Strength", "Degree")
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in unique(metric_data$HI)) {
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == j], ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
library(ggplot2) # Visualization
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in unique(metric_data$HI)) {
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == j], ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
heatmap_list[[1]]
View(heatmap_list)
unique(metric_data$HI)
droplevels(unique(metric_data$HI), exclude = "NF")
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in droplevels(unique(metric_data$HI), exclude = "NF")) {
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == j], ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
View(heatmap_list)
na.omit(droplevels(unique(metric_data$HI), exclude = "NF"))
c("BG", "FG", "SD")
heatmap_list <- list()
for (i in seq_along(data_list)) {
metric_data <- data_list[[i]]
for (j in c("BG", "FG", "SD")) {
HI_data <- metric_data[metric_data$HI == j, ]
matched_ids <- metric_data[metric_data$ID[metric_data$Period == "Pre-HAB" & metric_data$HI == "NF"] %in%
metric_data$ID[metric_data$Period == "Post_HAB" & metric_data$HI == j], ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
heatmap_list[[paste0(metric_title[i], "_", j)]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[i], x ="IDs", y ="Period")
}
}
View(heatmap_list)
# BG
heatmap_list[[1]]
heatmap_list[[2]]
heatmap_list[[3]]
# FG
heatmap_list[[4]]
View(B_data)
# Filter data for Between and unique IDs
unique_data_b <- result_df[!duplicated(result_df[, c('ID', 'Period')]), ]
# Set up data
result_df <- readRDS("result_df.RData")
none_df <- result_df[!(result_df$Period == 1 & result_df$HI == "NF"), ]
result_df <- none_df[!(none_df$Period == 0 & !(none_df$ID %in% none_df$ID[none_df$Period == 1]) & none_df$HI == "NF"), ]
ID_1 <- unique(result_df$ID[result_df$Period==0])
ID_2 <- unique(result_df$ID[result_df$Period==1])
Period <- c("Pre-HAB", "Post_HAB")
# Filter data for Between and unique IDs
unique_data_b <- result_df[!duplicated(result_df[, c('ID', 'Period')]), ]
B_data <- data.frame(ID = c(ID_1, ID_2),
Period = c(rep(Period[1], length(ID_1)),
rep(Period[2], length(ID_2))),
HI = unique_data_b$HI)
B_data
# Between
B_data$Betweeness <- c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1])
B_data
c(scale(c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1])))
unique_data_b
# Strength
B_data$Strength <- c(scale(c(unique_data_b$Strength[unique_data_b$Period == 0],
unique_data_b$Strength[unique_data_b$Period == 1])))
B_data
# Degree
B_data$Degree <- c(scale(c(unique_data_b$Degree[unique_data_b$Period == 0],
unique_data_b$Degree[unique_data_b$Period == 1])))
B_data
# Between
B_data$Betweeness <- c(scale(c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1])))
B_data
# plotting the heatmap
metric_title <- c("Betweeness", "Strength", "Degree")
heatmap_list <- list()
j="BG"
HI_data <- metric_data[metric_data$HI == j, ]
HI_data <- B_data[B_data$HI == j, ]
HI_data
matched_ids <- B_data[B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"] %in%
B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j], ]
matched_ids
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
matched_ids
subset_data <- rbind(HI_data, matched_ids)
subset_data
matched_ids <- B_data[B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"] %in% B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j], ]
matched_ids
j="BG"
matched_ids <- B_data[B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"] %in% B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j], ]
matched_ids
B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"]
B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j]
B_data
B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j]
B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == "BG"]
B_data$ID[B_data$HI == j]
B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]
matched_ids <- B_data[B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"] %in% B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j], ]
matched_ids
intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j])
B_data[intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
B_data[B_data$ID == intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
matched_ids <- B_data[B_data$ID %in% intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j]), ]
matched_ids
B_data$ID %in% intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j])
B_data$ID == intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j])
intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post-HAB" & B_data$HI == j])
B_data[B_data$ID %in% intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"], B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
matched_ids
matched_ids <- B_data[B_data$ID %in%
intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"],
B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
matched_ids
matched_ids[matched_ids$HI == "NF", ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
matched_ids
subset_data <- rbind(HI_data, matched_ids)
subset_data
count <- 1
ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
subtitle =  metric_title[count], x ="IDs", y ="Period")
# plotting the heatmap
metric_title <- c("Betweeness", "Strength", "Degree")
metric_title[count]
ID_1
# Combine the sets of data
B_data <- data.frame(ID = rep(c(ID_1, ID_2), 3),
Period = rep(c(rep(Period[1], length(ID_1)),
rep(Period[2], length(ID_2))), 3),
HI = rep(unique_data_b$HI, 3),
Betweeness = c(scale(c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1]))),
Strength = c(scale(c(unique_data_b$Strength[unique_data_b$Period == 0],
unique_data_b$Strength[unique_data_b$Period == 1]))),
Degree = c(scale(c(unique_data_b$Degree[unique_data_b$Period == 0],
unique_data_b$Degree[unique_data_b$Period == 1]))))
B_data
rep(c(ID_1, ID_2), 3)
ID_length <- rep(c(ID_1, ID_2), 3)
# Combine the sets of data
B_data <- data.frame(ID = ID_length,
Period = rep(c(rep(Period[1], length(ID_1)),
rep(Period[2], length(ID_2))), 3),
HI = rep(unique_data_b$HI, 3),
Value = c(c(scale(c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1]))),
c(scale(c(unique_data_b$Strength[unique_data_b$Period == 0],
unique_data_b$Strength[unique_data_b$Period == 1]))),
c(scale(c(unique_data_b$Degree[unique_data_b$Period == 0],
unique_data_b$Degree[unique_data_b$Period == 1])))),
Metric = c(rep("Betweeness", length(ID_length)),
rep("Betweeness", length(ID_length)),
rep("Betweeness", length(ID_length))))
B_data
# plotting the heatmap
heatmap_list <- list()
count <- 1
j="BG"
HI_data <- B_data[B_data$HI == j, ]
HI_data
B_data[B_data$HI == j, ]
# Combine the sets of data
B_data <- data.frame(ID = ID_length,
Period = rep(c(rep(Period[1], length(ID_1)),
rep(Period[2], length(ID_2))), 3),
HI = rep(unique_data_b$HI, 3),
Value = c(c(scale(c(unique_data_b$Between[unique_data_b$Period == 0],
unique_data_b$Between[unique_data_b$Period == 1]))),
c(scale(c(unique_data_b$Strength[unique_data_b$Period == 0],
unique_data_b$Strength[unique_data_b$Period == 1]))),
c(scale(c(unique_data_b$Degree[unique_data_b$Period == 0],
unique_data_b$Degree[unique_data_b$Period == 1])))),
Metric = c(rep("Betweeness", length(ID_length)),
rep("Strength", length(ID_length)),
rep("Degree", length(ID_length))))
B_data
# plotting the heatmap
heatmap_list <- list()
HI_data <- B_data[B_data$HI == j, ]
HI_data
matched_ids <- B_data[B_data$ID %in%
intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"],
B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
subset_data
ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
x ="IDs", y ="Period")
# plotting the heatmap
heatmap_list <- list()
count <- 1
for (j in c("BG", "FG", "SD")) {
HI_data <- B_data[B_data$HI == j, ]
matched_ids <- B_data[B_data$ID %in%
intersect(B_data$ID[B_data$Period == "Pre-HAB" & B_data$HI == "NF"],
B_data$ID[B_data$Period == "Post_HAB" & B_data$HI == j]), ]
matched_ids <- matched_ids[matched_ids$HI == "NF", ]
subset_data <- rbind(HI_data, matched_ids)
heatmap_list[[count]] <- ggplot(subset_data, aes(ID, Period, fill = Value)) +
geom_tile() +
theme_minimal() +
scale_fill_gradient(low="white", high="red") +
labs(title = "Heatmap of Centrality Metrics of Dolphins",
x ="IDs", y ="Period")
count <- 1 + 1
}
# Plot heatmaps
heatmap_list[[1]] # BG
heatmap_list[[2]] # FG
heatmap_list[[3]] # SD
j="SD"
HI_data <- B_data[B_data$HI == j, ]
HI_data
# Models in nimble
model1 <- nimbleCode({
#Priors
Intercept ~ dt(mu=0, sigma=1, df=1)
HI_Effect ~ dt(mu=0, sigma=1, df=1)
Obs.Err ~ T(dt(mu=0, sigma=1, df=1), 0, )
for (j in 1:n.obs) {
# Process Model
Between[i] <- Intercept + HI_Effect * HI[i] * Period[i]
# Observation Model (Likelihood)
Between_Obs[i] ~ dnorm(mean = Between[i], sd = Obs_Err)
}#i
})#model1
library(nimble) # For MCMC
library(mcmcplots) # For MCMC plots
library(MCMCvis)
library(tidyverse)
source("../code/attach.nimble_v2.R")
# Models in nimble
model1 <- nimbleCode({
#Priors
Intercept ~ dt(mu=0, sigma=1, df=1)
HI_Effect ~ dt(mu=0, sigma=1, df=1)
Obs.Err ~ T(dt(mu=0, sigma=1, df=1), 0, )
for (j in 1:n.obs) {
# Process Model
Between[i] <- Intercept + HI_Effect * HI[i] * Period[i]
# Observation Model (Likelihood)
Between_Obs[i] ~ dnorm(mean = Between[i], sd = Obs_Err)
}#i
})#model1
# Parameters monitored (are there any new parameters to include?)
parameters <- c("Intercept", "HI_Effect")
# MCMC Settings
ni <- 40000
nt <- 40
nb <- 20000
nc <- 3
# Data
nimble.data = list(Between = result_df$Between,
HI = result_df$HI,
Period = result_df$Period)
nrow(result_df
)
# Set up data
result_df <- readRDS("result_df.RData")
nrow(result_df)
# Data
nimble.data = list(Between = result_df$Between,
HI = result_df$HI,
Period = result_df$Period)
nimble.constants = list(n.obs = nrow(result_df))
mcmc.output <- nimbleMCMC(code = model1,
data = nimble.data,
constants=nimble.constants,
monitors = parameters,
niter = ni,
nburnin = nb,
nchains = nc,
thin=nt,
summary=TRUE,
samplesAsCodaMCMC = TRUE)
result_df$HI
result_df$Period
as.numeric(result_df$HI)
# Data
nimble.data = list(Between = result_df$Between,
HI = as.numeric(result_df$HI),
Period = result_df$Period)
nimble.constants = list(n.obs = nrow(result_df))
mcmc.output <- nimbleMCMC(code = model1,
data = nimble.data,
constants=nimble.constants,
monitors = parameters,
niter = ni,
nburnin = nb,
nchains = nc,
thin=nt,
summary=TRUE,
samplesAsCodaMCMC = TRUE)
